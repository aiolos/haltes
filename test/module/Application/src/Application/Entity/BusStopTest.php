<?php

namespace Application\Entity;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2014-12-15 at 11:00:12.
 */
class BusStopTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var BusStop
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new BusStop;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers Application\Entity\BusStop::getCode
     */
    public function testGetCode()
    {
        $value = 'HTM:2907';
        $this->assertNull($this->object->getCode());
        $this->object->setCode($value);
        $this->assertEquals($value, $this->object->getCode());
    }

    /**
     * @covers Application\Entity\BusStop::setCode
     */
    public function testSetCode()
    {
        $this->assertEquals($this->object, $this->object->setCode('HTM:2907'));
    }

    /**
     * @covers Application\Entity\BusStop::getPto
     */
    public function testGetPto()
    {
        $value = 'HTM:2907';
        $this->object->setCode($value);
        $this->assertEquals('HTM', $this->object->getPto());
    }

    /**
     * @covers Application\Entity\BusStop::getName
     */
    public function testGetName()
    {
        $value = 'Station HS';
        $this->assertNull($this->object->getName());
        $this->object->setName($value);
        $this->assertEquals($value, $this->object->getName());
    }

    /**
     * @covers Application\Entity\BusStop::setName
     */
    public function testSetName()
    {
        $this->assertEquals($this->object, $this->object->setName('Station Laan van NOI'));
    }

    /**
     * @covers Application\Entity\BusStop::getTown
     */
    public function testGetTown()
    {
        $value = 'Station HS';
        $this->assertNull($this->object->getTown());
        $this->object->setTown($value);
        $this->assertEquals($value, $this->object->getTown());
    }

    /**
     * @covers Application\Entity\BusStop::setTown
     */
    public function testSetTown()
    {
        $this->assertEquals($this->object, $this->object->setTown('Den Haag'));
    }

    /**
     * @covers Application\Entity\BusStop::getCountry
     */
    public function testGetCountry()
    {
        $value = 'NL';
        $this->assertNull($this->object->getCountry());
        $this->assertEquals($value, $this->object->setCountry($value)->getCountry());
    }

    /**
     * @covers Application\Entity\BusStop::setCountry
     */
    public function testSetCountry()
    {
        $this->assertEquals($this->object, $this->object->setCountry('NL'));
    }

    /**
     * @covers Application\Entity\BusStop::getLatitude
     */
    public function testGetLatitude()
    {
        $value = '52.654789';
        $this->assertNull($this->object->getLatitude());
        $this->object->setLatitude($value);
        $this->assertEquals($value, $this->object->getLatitude());
    }

    /**
     * @covers Application\Entity\BusStop::setLatitude
     */
    public function testSetLatitude()
    {
        $this->assertEquals($this->object, $this->object->setLatitude('52.123654'));
    }

    /**
     * @covers Application\Entity\BusStop::getLongitude
     */
    public function testGetLongitude()
    {
        $value = '5.654789';
        $this->assertNull($this->object->getLongitude());
        $this->object->setLongitude($value);
        $this->assertEquals($value, $this->object->getLongitude());
    }

    /**
     * @covers Application\Entity\BusStop::setLongitude
     */
    public function testSetLongitude()
    {
        $this->assertEquals($this->object, $this->object->setLongitude('5.123654'));
    }

    /**
     * @covers Application\Entity\BusStop::getType
     */
    public function testGetType()
    {
        $value = 1;
        $this->assertNull($this->object->getType());
        $this->object->setType($value);
        $this->assertEquals($value, $this->object->getType());
    }

    /**
     * @covers Application\Entity\BusStop::setType
     */
    public function testSetType()
    {
        $this->assertEquals($this->object, $this->object->setType(1));
    }

    /**
     * @covers Application\Entity\BusStop::getWheelchair
     */
    public function testGetWheelchair()
    {
        $value = 1;
        $this->assertNull($this->object->getWheelchair());
        $this->object->setWheelchair($value);
        $this->assertEquals($value, $this->object->getWheelchair());
    }

    /**
     * @covers Application\Entity\BusStop::setWheelchair
     */
    public function testSetWheelchair()
    {
        $this->assertEquals($this->object, $this->object->setWheelchair(1));
    }

    /**
     * @covers Application\Entity\BusStop::getParent
     */
    public function testGetParent()
    {
        $value = 'stoparea:HTM:1001';
        $this->assertNull($this->object->getParent());
        $this->object->setParent($value);
        $this->assertEquals($value, $this->object->getParent());
    }

    /**
     * @covers Application\Entity\BusStop::setParent
     */
    public function testSetParent()
    {
        $this->assertEquals($this->object, $this->object->setParent('stoparea:HTM:1001'));
    }

    /**
     * @covers Application\Entity\BusStop::toJson
     */
    public function testToJson()
    {
        $this->object->setCode('HTM:1001')->setLatitude('52.123456')->setLongitude('5.124322')->setName('some Location name');
        $this->assertInternalType('string', $this->object->toJson());
        $this->assertJson($this->object->toJson());
    }

    /**
     * @covers Application\Entity\BusStop::getOperator
     * @dataProvider operatorProvider
     */
    public function testGetOperator($operator)
    {
        $this->assertNull($this->object->getOperator());
        $this->object->setOperator($operator);
        $this->assertEquals($operator, $this->object->getOperator());
    }

    public function operatorProvider()
    {
        return array(
            array('CXX'),
            array('ARR'),
            array('EBS'),
            array('NS'),
            array('NSH'),
            array('VEOLIA'),
            array('QBUZZ'),
            array('SYNTUS'),
            array('RET'),
            array('GVB'),
            array('HTM'),
        );
    }

    /**
     * @covers Application\Entity\BusStop::setOperator
     */
    public function testSetOperator()
    {
        $this->assertEquals($this->object, $this->object->setOperator("CXX"));
    }
}
